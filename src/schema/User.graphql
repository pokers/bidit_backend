# TODO : should use custom scalar. 
enum UserStatus{
    VALID,
    INVALID
}
enum JoinPath{
    KAKAO,
    APPLE,
    GOOGLE
}
enum gender{
    MALE,
    FEMALE
}
type User {
    id: Int!
    status: Int!    # 0=VALID, 1=INVALID
    nickname: String
    passwd: String
    joinPath: JoinPath
    gender: gender
    birth: String
    email: String
    phone: String
    createdAt: String!
    updatedAt: String
    deletedAt: String
    description: String
    items:ItemConnection
    kakaoAccount:KakaoAccount
}

type Query {
    getUser(id: Int!): User
    me:User
}

type Mutation {
    addUser:User
    updateUser(userUpdate:userUpdateInput):User
    updatePushToken(pushTokenUpdate:pushTokenUpdateInput):Boolean
}
input userUpdateInput{
    status: Int
    nickname: String
    gender: gender
    birth: String
    deletedAt: String
    description: String
}
input pushTokenUpdateInput{
    status: Int
    token: String
}

schema {
    query: Query
    mutation: Mutation
}
